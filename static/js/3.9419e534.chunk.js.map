{"version":3,"sources":["images/login-bg.jpeg","jsx/pages/Authintication/ForgetPassword.js","jsx/pages/Authintication/Login.js"],"names":["ForgetPassword","_ref","_Translate$lang","_Translate$lang2","_Translate$lang3","_Translate$lang4","modal","setModal","_useState","useState","email","code","password","_useState2","_slicedToArray","formData","setFormData","_useState3","_useState4","loading","setLoading","_useState5","_useState6","accessToken","setAccessToken","_useState7","_useState8","show","setShowCode","adminService","AdminService","lang","useSelector","state","auth","_jsx","Modal","className","style","textAlign","onHide","children","_jsxs","AvForm","onValidSubmit","e","preventDefault","data","forgetPassword","then","res","status","_res$data","http","setJwt","toast","success","Header","Title","Button","variant","right","left","onClick","Body","Row","Col","md","AvField","label","Translate","type","placeholder","bsSize","name","validate","required","value","errorMessage","field_required","onChange","_objectSpread","_defineProperty","target","Footer","back","close","disabled","next","submit","connect","successMessage","showLoading","props","navigate","useNavigate","setEmail","setPassword","showPassword","setShowPassword","dispatch","useDispatch","Auth","concat","top","transform","zIndex","textWrap","fontSize","loadingToggleAction","loginAction","height","margin","color","cursor","gap","login","href","rel"],"mappings":"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","file":"static/js/3.9419e534.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/login-bg.a6ea33e2.jpeg\";","import { useEffect, useState } from \"react\";\nimport { Button, Col, Modal, Row } from \"react-bootstrap\"\nimport {AvField, AvForm} from \"availity-reactstrap-validation\";\nimport { toast } from \"react-toastify\";\nimport { useSelector } from \"react-redux\";\nimport { Translate } from \"../../Enums/Tranlate\";\nimport AdminService from \"../../../services/AdminService\";\nimport http from \"../../../services/HttpService\";\nimport axios from \"axios\";\n\nconst ForgetPassword = ({modal, setModal})=>{\n    const [formData, setFormData] = useState({\n        email: '',\n        code: '',\n        password: '',\n    })\n    const [loading, setLoading] = useState(false)\n    const [accessToken, setAccessToken] = useState(\"\")\n    const [show, setShowCode] = useState('email')\n    const adminService = new AdminService()\n    const lang = useSelector(state=> state.auth.lang)\n\n    const submitEmail = (e) =>{\n        e.preventDefault();\n        let data = {}\n\n        setLoading(true)\n        if(show === 'email'){\n            data['email']= formData?.email\n            adminService?.forgetPassword('forgetPassword', data).then(res=>{\n                if(res?.status){\n                    setShowCode('code')\n                }\n            })\n        } else if(show === 'code') {\n            data['email']= formData?.email\n            data['code']= formData?.code\n            adminService?.forgetPassword('verifiedForgetPasswordCode', data).then(res=>{\n                if(res?.status){\n                    setAccessToken(res?.data?.accessToken);\n                    setShowCode('password')\n                }\n            })\n        } else {\n            data['new_password']= formData?.password\n            http.setJwt(accessToken);\n            adminService?.forgetPassword('changePasswordForForgetPassword', data).then(res=>{\n                if(res?.status){\n                    toast.success(\"Password Updated Successfully.\")\n                    setModal()\n                }\n            })\n        }\n        setLoading(false)\n    }\n\n    return(\n        <Modal className={lang === 'en' ? \"en fade addProduct mt-4\" : \"ar fade addProduct mt-4\"} style={{textAlign: lang === 'en' ? 'left' : 'right'}} show={modal} onHide={()=>{\n            setModal()\n            }}>\n                <AvForm\n                    className='form-horizontal'\n                    onValidSubmit={submitEmail}>\n            <Modal.Header>\n            <Modal.Title>Forget Password</Modal.Title>\n            <Button\n                variant=\"\"\n                className=\"close\"\n                style={{right: lang === 'en' ? '0' : 'auto', left: lang === 'ar' ? '0' : 'auto'}}\n                onClick={()=>{\n                    setModal()\n                }}\n                >\n                <span>&times;</span>\n            </Button>\n            </Modal.Header>\n            <Modal.Body>\n                    <Row>\n                        <Col md={12}>\n                            <AvField\n                                label={Translate[lang][show]}\n                                type={show !== 'email' ? 'text' : 'email'}\n                                placeholder={Translate[lang][show]}\n                                bsSize=\"lg\"\n                                name={show}\n                                validate={{\n                                    required: {\n                                        value: true,\n                                        errorMessage: Translate[lang].field_required\n                                    }\n                                }}\n                                value={formData[show]}\n                                onChange={(e) => {\n                                    setFormData({...formData, [show]: e.target.value})\n                                }}\n                            />\n                        </Col>\n                    </Row>\n            </Modal.Body>\n            <Modal.Footer>\n            <Button onClick={() =>{\n                if(show === 'code'){\n                    setShowCode('email')\n                } else if(show === 'password'){\n                    setShowCode('code')\n                } else {\n                    setModal()\n                }\n            }} variant=\"danger light\">\n            {show !== 'email' ? Translate[lang]?.back : Translate[lang]?.close}\n            </Button>\n            <Button \n                    variant=\"primary\" \n                    type='submit'\n                    disabled={loading}\n                >{show !== 'email'  ? Translate[lang]?.next : Translate[lang]?.submit}</Button>\n            </Modal.Footer>\n            </AvForm>\n        </Modal>)\n}\n\nexport default ForgetPassword;","import React, { useState } from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AvField, AvForm } from \"availity-reactstrap-validation\";\r\nimport {\r\n  loadingToggleAction,\r\n  loginAction,\r\n} from \"../../../store/actions/AuthActions\";\r\nimport { Translate } from \"../../Enums/Tranlate\";\r\nimport login from \"../../../images/login-bg.jpeg\";\r\nimport ForgetPassword from \"./ForgetPassword\";\r\n\r\nfunction Login(props) {\r\n  const navigate = useNavigate();\r\n  const [modal, setModal] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const Auth = useSelector((state) => state.auth);\r\n  const lang = useSelector((state) => state.auth.lang);\r\n\r\n  function onLogin(e) {\r\n    e.preventDefault();\r\n    dispatch(loadingToggleAction(true));\r\n    dispatch(loginAction(email, password, navigate));\r\n  }\r\n\r\n  return (\r\n    <div className={`login-wrapper ${lang}`}>\r\n      <span className=\"login-border\"></span>\r\n      <div className=\"row w-100 vh-100\">\r\n        <div className=\"col-md-6 one\">\r\n          <div className=\"position-absolute welcome-text\"\r\n          style={{\r\n            top: \"47%\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            zIndex: \"9\",\r\n            textWrap: \"nowrap\",\r\n            textAlign: 'center'\r\n          }}>\r\n            <h3 className=\"text-white\">Zentra</h3>\r\n            <h3 className=\"text-white\">Welcome to Dashboard</h3>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <div className=\"authincation-content auth-form text-center\">\r\n                      {/* <div className=\" mb-4\">\r\n                        <h3 className=\"logo-login\">Zentra</h3>\r\n                        <h3 className=\"signIn\">{Translate[lang].sign_in}</h3>\r\n                      </div> */}\r\n                      {props.errorMessage && (\r\n                        \r\n                        <div className=\"text-danger\">{props.errorMessage}</div>\r\n                      )}\r\n                      {props.successMessage && (\r\n                        <div className=\"bg-green-300 text-green-900 border border-green-900 p-1 my-2\">\r\n                          {props.successMessage}\r\n                        </div>\r\n                      )}\r\n                      <i className=\"la la-users text-white mb-3\" style={{fontSize: '4rem'}}></i>\r\n                      <AvForm onValidSubmit={onLogin} className=\"login-form\">\r\n                        <Row>\r\n                          <Col md={12} className=\"form-group mb-2\">\r\n                            {/* <label style={{ fontSize: \"16px\" }}>\r\n                              {Translate[lang].email}\r\n                            </label> */}\r\n                            <AvField\r\n                              name=\"email\"\r\n                              type=\"email\"\r\n                              value={email}\r\n                              errorMessage=\"Please Enter a Valid Value\"\r\n                              className=\"radius-10\"\r\n                              style={{height: \"50px\"}}\r\n                              validate={{\r\n                                required: {\r\n                                  value: true,\r\n                                  errorMessage: Translate[lang].field_required,\r\n                                },\r\n                              }}\r\n                              placeholder={Translate[lang].email}\r\n                              onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                          </Col>\r\n                          <Col md={12} className=\"form-group position-relative\">\r\n                            {/* <label style={{ fontSize: \"16px\"}}>\r\n                              {Translate[lang].password}\r\n                            </label> */}\r\n                            <AvField\r\n                              name=\"password\"\r\n                              type={showPassword ? \"text\" : \"password\"}\r\n                              value={password}\r\n                              className=\"radius-10\"\r\n                              style={{height: \"50px\"}}\r\n                              errorMessage=\"Please enter a valid password\"\r\n                              validate={{\r\n                                required: {\r\n                                  value: true,\r\n                                  errorMessage: Translate[lang].field_required,\r\n                                },\r\n                              }}\r\n                              placeholder={Translate[lang].password}\r\n                              onChange={(e) => setPassword(e.target.value)}\r\n                            />\r\n                            {showPassword ? (\r\n                              <i\r\n                                className=\"la la-eye-slash position-absolute cursor-pointer\"\r\n                                style={{\r\n                                  top: \"16px\",\r\n                                  right: lang === \"en\" ? \"8%\" : \"auto\",\r\n                                  left: lang === \"ar\" ? \"8%\" : \"auto\",\r\n                                }}\r\n                                onClick={() => setShowPassword(false)}\r\n                              ></i>\r\n                            ) : (\r\n                              <i\r\n                                className=\"la la-eye position-absolute cursor-pointer\"\r\n                                style={{\r\n                                  top: \"16px\",\r\n                                  right: lang === \"en\" ? \"8%\" : \"auto\",\r\n                                  left: lang === \"ar\" ? \"8%\" : \"auto\",\r\n                                }}\r\n                                onClick={() => setShowPassword(true)}\r\n                              ></i>\r\n                            )}\r\n                            <p \r\n                              style={{\r\n                                fontSize: '13px',\r\n                                textAlign: 'start',\r\n                                margin: '0',\r\n                                color: '#dedede',\r\n                                cursor: 'pointer'\r\n                              }}\r\n                              onClick={()=> setModal(true)}\r\n                            >\r\n                              Forget my Password..?\r\n                            </p>\r\n                          </Col>\r\n                        </Row>\r\n                        <div className=\"text-center\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-primary d-flex align-items-center justify-content-center btn-block mb-4 radius-10 h-40\"\r\n                            disabled={Auth?.showLoading}\r\n                            style={{gap: '12px'}}\r\n                          >\r\n                            {Translate[lang].login}\r\n                            <i className=\"la la-sign-in-alt fs-24\"></i>\r\n                          </button>\r\n                        </div>\r\n                      </AvForm>\r\n                      <div className=\"text-center mb-2\">\r\n                        <label\r\n                          className=\"poweredBy d-block text-white\"\r\n                          style={{ textWrap: \"nowrap\", fontSize: \"12px\" }}\r\n                        >\r\n                          Powered by{\" \"}\r\n                          <a href=\"https://www.leaptechkw.com/\" target=\"_blank\" rel=\"noreferrer\" style={{color: '#fff'}}>\r\n                            Leap Tech kw{\" \"}\r\n                          </a>\r\n                        </label>\r\n                      </div>\r\n          </div>\r\n        </div>\r\n        </div>\r\n        {modal && <ForgetPassword modal={modal} setModal={()=> setModal(false)} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    errorMessage: state.auth.errorMessage,\r\n    successMessage: state.auth.successMessage,\r\n    showLoading: state.auth.showLoading,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Login);\r\n"],"sourceRoot":""}